__author__ = 'markus'

import numpy as np
from coordinateAscent import coordinateAscent
import timeit

def main():
    beta = np.array([1, 1, 1, 1, 1, 0, 0, 0, 0])
    #size of test set or number of data sets/measurements, etc.
    N = 100
    #number of features (getting the size of beta)
    p = beta.shape[0]
    #generating a random array in R^N*p
    X = np.random.random((N, p))

    X = np.array([ [3.8442e-01, 5.5492e-01, 6.7159e-01, 7.4214e-01, 9.9647e-01, 7.3027e-01, 8.8582e-02, 5.5504e-01],
          [7.6364e-01, 8.2962e-02, 2.7728e-01, 6.4108e-01, 2.2594e-01, 8.5272e-01, 5.4048e-01, 1.9197e-01],
          [3.4709e-01, 5.4699e-01, 7.3942e-01, 9.3196e-02, 1.4081e-01, 4.2505e-01, 1.4281e-01, 5.2842e-01],
          [8.8092e-01, 7.7138e-01, 9.2900e-01, 6.7280e-01, 5.1975e-01, 3.3376e-01, 6.9872e-01, 3.9552e-01],
          [2.6635e-01, 2.5154e-01, 3.3970e-01, 8.1049e-01, 1.7686e-01, 1.8540e-03, 1.1430e-02, 1.4617e-01],
          [9.0071e-01, 6.8493e-01, 7.6488e-01, 8.8910e-01, 8.4056e-01, 1.0433e-01, 2.6512e-01, 4.6091e-01],
          [5.8397e-01, 6.1531e-01, 4.8539e-01, 2.0824e-01, 1.2042e-01, 7.4616e-01, 9.5169e-01, 1.8298e-02],
          [6.6498e-01, 1.3103e-01, 6.6457e-01, 7.4640e-01, 2.8802e-01, 7.4288e-01, 8.2469e-01, 3.3720e-01],
          [3.1117e-01, 3.0576e-01, 4.8598e-01, 2.3820e-01, 1.4970e-01, 4.8411e-01, 1.0852e-01, 2.1215e-01],
          [8.5033e-01, 6.9534e-01, 6.8127e-01, 6.0905e-01, 1.6699e-01, 7.0375e-01, 4.3495e-01, 5.8735e-02],
          [1.8409e-01, 9.5156e-02, 6.6763e-01, 3.9783e-01, 8.9189e-01, 6.4975e-01, 1.7041e-01, 5.3629e-01],
          [7.1514e-01, 1.0890e-01, 8.3072e-01, 7.5899e-01, 5.1097e-01, 8.4194e-01, 8.5388e-01, 1.6599e-01],
          [9.3129e-02, 6.8931e-01, 4.7935e-01, 2.7003e-01, 3.6018e-01, 7.8678e-02, 4.1749e-01, 7.1784e-01],
          [1.4547e-01, 5.7453e-01, 2.9238e-01, 2.3745e-01, 1.6119e-01, 2.1107e-01, 4.3462e-01, 5.1465e-01],
          [7.7601e-01, 7.4123e-01, 8.2621e-01, 1.1100e-01, 1.6644e-01, 8.3100e-01, 9.5557e-01, 9.1115e-01],
          [6.9981e-01, 5.0364e-02, 3.3162e-01, 8.4421e-02, 6.1404e-01, 9.1964e-01, 3.0291e-01, 4.4426e-01],
          [6.2028e-01, 3.3755e-01, 4.0728e-01, 6.7385e-01, 7.5156e-01, 9.8461e-01, 2.2515e-01, 1.3409e-01],
          [3.4332e-01, 6.7668e-01, 5.4335e-01, 3.0181e-01, 8.8103e-01, 1.2321e-04, 8.1881e-01, 5.2923e-01],
          [8.8736e-01, 4.0163e-01, 4.2551e-01, 5.2382e-01, 3.4017e-01, 5.2507e-01, 4.2184e-01, 1.4502e-01],
          [8.2742e-01, 7.0368e-01, 2.5173e-02, 4.0127e-01, 7.3492e-01, 3.4405e-01, 5.2857e-01, 8.7638e-01],
          [3.8574e-01, 2.5924e-02, 6.9011e-01, 2.7877e-01, 3.3909e-01, 7.1190e-01, 7.7716e-01, 2.5373e-01],
          [2.0228e-02, 6.8247e-02, 1.8682e-01, 3.4621e-01, 2.1979e-01, 3.3319e-01, 3.3300e-01, 1.5214e-01],
          [4.8531e-01, 2.2157e-01, 9.4295e-01, 5.9107e-01, 9.8385e-01, 1.7468e-01, 5.3644e-01, 5.4003e-01],
          [9.2436e-01, 6.1827e-01, 3.7386e-01, 4.0696e-01, 3.1818e-01, 4.0710e-01, 1.0712e-01, 2.9255e-01],
          [4.8095e-03, 1.9745e-01, 1.5776e-01, 6.6925e-01, 6.4033e-01, 4.3067e-01, 2.9760e-01, 4.4885e-02],
          [5.3847e-02, 9.7764e-01, 7.8332e-01, 8.5521e-01, 6.5877e-01, 6.3454e-01, 9.4227e-01, 9.8247e-01],
          [4.5775e-01, 5.2097e-01, 6.5074e-01, 6.8827e-02, 1.1603e-01, 9.0337e-01, 9.5102e-01, 1.4718e-01],
          [7.4272e-01, 2.4970e-01, 6.5841e-01, 6.2976e-01, 2.7895e-01, 8.2082e-01, 1.0820e-02, 5.9745e-01],
          [5.0730e-01, 2.1166e-01, 8.5067e-01, 6.8474e-01, 5.2807e-01, 3.0104e-01, 6.0895e-01, 6.1308e-01],
          [3.2903e-01, 1.5635e-01, 7.5978e-01, 8.7038e-01, 2.5454e-01, 6.8038e-01, 9.8724e-01, 2.8443e-01],
          [9.7645e-01, 3.9955e-01, 6.1967e-01, 7.2969e-02, 7.9001e-02, 7.4449e-01, 1.1338e-01, 6.7137e-01],
          [5.6627e-01, 8.0205e-02, 9.6879e-01, 3.3810e-01, 5.7743e-01, 2.1741e-01, 6.6703e-01, 7.8381e-01],
          [6.6878e-02, 5.8035e-01, 4.5635e-02, 3.5035e-01, 5.7168e-01, 6.0798e-01, 9.1992e-01, 3.7174e-01],
          [2.3954e-01, 6.5686e-01, 9.9679e-01, 9.0359e-01, 8.5971e-01, 8.6030e-01, 8.7839e-01, 5.4659e-01],
          [1.0522e-02, 2.6742e-01, 2.0592e-01, 5.3791e-01, 6.1448e-01, 1.6667e-01, 3.1820e-01, 1.5547e-02],
          [8.8997e-01, 9.6981e-01, 7.1913e-01, 3.6691e-01, 2.5664e-01, 8.7579e-01, 9.5800e-01, 3.6804e-01],
          [9.4004e-01, 6.0832e-01, 3.5418e-01, 8.6721e-01, 1.3887e-02, 1.2024e-02, 7.6642e-01, 1.5917e-01],
          [5.3280e-01, 1.0317e-02, 8.8165e-02, 4.8087e-01, 8.6844e-02, 8.3435e-01, 6.8478e-01, 4.4092e-01],
          [8.3953e-01, 1.2298e-01, 7.9171e-02, 2.3017e-01, 2.5811e-01, 4.8097e-01, 3.9886e-01, 3.6708e-01],
          [1.8063e-01, 7.7154e-02, 5.8602e-01, 2.1122e-01, 7.2566e-01, 3.4554e-01, 8.1723e-02, 4.5316e-01],
          [5.3813e-01, 7.9342e-01, 4.4492e-01, 1.2931e-01, 2.5744e-01, 7.9370e-01, 9.2239e-01, 2.2670e-01],
          [6.7226e-01, 5.5541e-01, 3.0774e-02, 1.6465e-01, 3.6659e-01, 1.9611e-02, 4.7778e-01, 4.9022e-01],
          [5.4954e-01, 1.8141e-02, 1.7029e-01, 1.1727e-01, 2.2394e-01, 6.9084e-01, 7.4344e-01, 3.9405e-02],
          [7.4537e-01, 4.5540e-01, 7.0882e-01, 3.3196e-01, 8.3978e-01, 2.8524e-01, 1.9480e-01, 8.0627e-01],
          [4.5081e-01, 9.7786e-01, 7.3902e-01, 1.7115e-02, 4.0755e-01, 8.4512e-01, 1.8643e-01, 5.4037e-01],
          [8.4052e-01, 1.3575e-01, 3.1875e-01, 4.7532e-01, 3.6238e-01, 8.2313e-03, 2.7413e-01, 1.5276e-01],
          [2.7424e-01, 2.2704e-01, 1.3394e-02, 6.4761e-01, 8.5151e-01, 4.1460e-01, 1.1277e-02, 9.8670e-01],
          [9.1979e-01, 8.5333e-01, 9.9806e-01, 7.4666e-01, 2.1879e-01, 2.1526e-01, 8.7702e-01, 5.3511e-01],
          [7.1542e-01, 4.0813e-01, 6.8445e-01, 7.0238e-01, 7.9074e-01, 5.2271e-01, 6.3862e-01, 7.4232e-01],
          [8.4587e-01, 8.2060e-01, 5.3464e-01, 9.7646e-01, 3.6199e-01, 6.4612e-01, 7.5284e-01, 3.2786e-01],
          [7.6434e-01, 7.0332e-01, 4.9464e-02, 7.3081e-01, 3.0574e-01, 9.1525e-01, 3.0296e-02, 2.9901e-01],
          [6.9342e-02, 3.4674e-01, 7.5461e-01, 2.9164e-01, 8.0829e-03, 6.8137e-01, 4.6950e-01, 1.1410e-01],
          [6.7928e-01, 8.5023e-01, 5.4981e-01, 8.0202e-01, 3.8973e-01, 8.4232e-01, 2.4825e-01, 1.9782e-01],
          [1.9925e-01, 3.5189e-01, 6.5538e-01, 4.6980e-01, 9.7991e-01, 5.6029e-01, 4.4559e-01, 2.2420e-01],
          [7.7250e-01, 6.0772e-01, 4.9699e-01, 2.7332e-02, 4.2399e-02, 4.4229e-01, 5.7299e-01, 8.0895e-01],
          [5.4468e-01, 8.4347e-01, 1.3127e-01, 2.4781e-01, 4.7721e-01, 4.5943e-01, 3.4942e-01, 8.6171e-01],
          [7.2112e-01, 4.5242e-01, 8.6540e-01, 4.9677e-01, 2.2901e-01, 6.4557e-01, 4.4221e-01, 5.4002e-01],
          [5.1265e-01, 1.9717e-01, 2.6769e-01, 5.2831e-01, 7.6351e-01, 9.6445e-02, 1.8368e-01, 6.6827e-01],
          [4.3381e-01, 5.6292e-01, 3.6946e-01, 7.7527e-01, 9.5210e-01, 4.6918e-02, 1.9581e-02, 9.0216e-01],
          [8.4224e-01, 6.3142e-02, 4.0191e-01, 4.2683e-01, 5.4081e-01, 9.2846e-01, 9.3501e-01, 6.9724e-01],
          [5.0996e-01, 3.1294e-01, 6.3079e-01, 8.8903e-01, 7.2352e-01, 9.8168e-01, 9.7655e-01, 2.4688e-01],
          [8.1932e-01, 7.3748e-01, 4.9271e-01, 2.6182e-01, 1.6601e-02, 5.9055e-01, 1.2792e-01, 8.9739e-01],
          [1.6682e-01, 6.8297e-01, 5.7402e-02, 2.7613e-01, 6.6550e-01, 8.6679e-01, 9.5572e-01, 8.9240e-01],
          [7.2014e-01, 1.8954e-01, 3.6915e-01, 6.5544e-01, 2.4220e-01, 3.7699e-01, 4.0202e-01, 4.8056e-01],
          [7.8659e-01, 2.3814e-01, 2.6281e-01, 5.3310e-01, 1.2018e-02, 4.3584e-01, 7.2151e-01, 7.6706e-01],
          [5.8267e-01, 5.0736e-01, 4.6456e-01, 5.8950e-01, 2.1248e-01, 4.5290e-01, 5.0510e-02, 1.3555e-01],
          [8.6997e-01, 4.8895e-01, 2.2899e-01, 5.6881e-01, 7.8512e-01, 7.3821e-02, 4.6109e-01, 6.7159e-01],
          [9.5324e-01, 8.6615e-01, 7.7089e-01, 5.2869e-01, 5.7960e-02, 8.7564e-01, 4.1147e-02, 4.9885e-03],
          [2.0900e-01, 1.1220e-01, 7.5506e-01, 2.4477e-01, 2.1632e-02, 4.9328e-01, 4.5315e-01, 4.5596e-01],
          [8.6738e-02, 6.3711e-01, 3.9014e-01, 3.9809e-01, 5.5132e-01, 4.2999e-01, 9.3754e-01, 8.3845e-01],
          [8.0479e-01, 3.1056e-01, 2.3011e-01, 8.7762e-02, 3.3173e-01, 3.8497e-01, 1.5631e-02, 6.0756e-01],
          [6.7576e-02, 5.6790e-01, 1.4699e-01, 5.9574e-01, 5.6352e-01, 4.8284e-02, 8.8620e-01, 8.4326e-02],
          [8.0093e-01, 8.9652e-01, 2.0120e-01, 4.2442e-03, 7.6641e-02, 5.5294e-01, 7.0059e-01, 8.1413e-02],
          [6.8080e-01, 7.0742e-01, 5.3230e-01, 3.3514e-01, 4.6085e-02, 9.1812e-01, 2.3809e-01, 9.5631e-02],
          [9.6986e-01, 4.0160e-01, 1.2170e-01, 9.9721e-01, 3.0543e-01, 4.4466e-01, 8.3343e-01, 3.6053e-01],
          [1.5369e-01, 5.0769e-01, 1.3165e-01, 6.7320e-01, 8.5349e-01, 4.9032e-01, 5.8910e-01, 3.3782e-01],
          [6.7384e-02, 5.3272e-01, 5.4842e-01, 1.1547e-01, 2.2873e-02, 4.2192e-01, 6.7945e-01, 4.4499e-01],
          [3.9519e-01, 3.6871e-03, 5.4829e-01, 7.5428e-01, 3.6664e-01, 9.1486e-01, 8.4641e-01, 9.5499e-01],
          [3.1246e-01, 8.9638e-01, 5.4568e-01, 7.5815e-01, 4.8492e-01, 4.4300e-01, 1.3994e-01, 4.1176e-01],
          [2.3569e-02, 3.0188e-01, 8.9754e-02, 5.6131e-01, 6.3440e-01, 6.9744e-01, 4.1214e-01, 9.7143e-01],
          [1.5307e-01, 9.8715e-01, 2.7009e-01, 3.5887e-01, 4.0980e-01, 6.8300e-01, 5.6510e-01, 8.1303e-01],
          [8.3423e-01, 4.4395e-02, 6.2722e-01, 6.1497e-01, 5.8677e-01, 8.7646e-01, 4.7495e-02, 4.6615e-01],
          [1.1860e-01, 8.7873e-01, 5.0515e-01, 5.4645e-01, 1.2428e-01, 5.5035e-01, 1.8363e-01, 1.7251e-01],
          [3.2050e-01, 8.9498e-01, 7.3899e-01, 8.1334e-01, 5.5601e-01, 8.2237e-01, 9.3181e-01, 9.4727e-01],
          [2.6219e-01, 6.9795e-01, 2.1720e-02, 3.3075e-01, 5.2087e-01, 3.5923e-01, 6.9287e-01, 9.9367e-01],
          [7.1192e-01, 9.0849e-01, 8.9704e-01, 8.7226e-01, 9.1354e-01, 9.6770e-01, 7.8091e-01, 3.0742e-01],
          [9.7544e-01, 3.3838e-01, 5.1133e-01, 4.2111e-01, 8.9234e-01, 2.7985e-02, 7.9985e-01, 2.0712e-01],
          [9.0472e-01, 7.7894e-03, 9.0963e-01, 1.6136e-01, 1.4344e-01, 2.0797e-01, 7.9324e-01, 2.0036e-01],
          [9.3137e-01, 2.6663e-01, 4.0448e-01, 1.6808e-01, 2.1676e-01, 7.5261e-01, 9.0627e-01, 4.4291e-01],
          [5.2071e-01, 5.9737e-01, 1.8600e-01, 7.5676e-01, 9.8729e-01, 5.1853e-01, 9.5413e-01, 6.9920e-02],
          [5.8187e-01, 4.2558e-01, 8.2878e-01, 1.3353e-01, 4.7911e-01, 6.3251e-01, 1.8196e-01, 2.8549e-01],
          [5.0577e-01, 6.5270e-01, 6.1537e-01, 1.0517e-01, 6.4431e-01, 9.8059e-01, 6.9595e-01, 6.1612e-01],
          [7.9207e-01, 8.5127e-01, 3.9763e-01, 8.0954e-01, 6.3524e-01, 8.8118e-02, 6.1083e-01, 9.2984e-02],
          [1.6740e-01, 2.9977e-01, 3.4534e-01, 6.3150e-01, 3.8684e-01, 8.9766e-01, 9.5804e-01, 8.4229e-01],
          [7.9993e-01, 3.1416e-01, 6.2803e-01, 9.5415e-01, 9.8916e-01, 6.8374e-01, 6.5438e-01, 5.2602e-01],
          [5.2715e-01, 2.3948e-01, 1.0775e-01, 8.1274e-01, 3.5760e-01, 7.1399e-01, 1.6684e-01, 9.7244e-01],
          [7.5668e-01, 3.7418e-01, 5.7810e-02, 8.4186e-01, 1.4041e-01, 8.8186e-01, 3.2638e-01, 2.0204e-01],
          [7.3408e-01, 6.9381e-01, 4.5292e-01, 5.9207e-01, 1.6840e-01, 2.7867e-01, 7.3312e-01, 1.8986e-01],
          [7.1480e-01, 6.9945e-01, 6.7140e-01, 2.5866e-01, 6.5066e-01, 3.3854e-01, 7.8488e-01, 6.5719e-01],
          [4.8873e-01, 4.5437e-01, 2.9518e-01, 6.1355e-01, 6.1664e-01, 1.4199e-01, 4.3271e-03, 9.1258e-02]])
    X = np.append(np.ones((N, 1)), X, 1)
    #beta[np.newaxis] is transforming beta into a two dimensional array and .T to a column vector
    y = np.dot(X, beta[np.newaxis].T)
    #print(beta)
    #print(p)
    #print('x = ')
    #print(X)
    #print('y = ')
    #print(y)
    ca = coordinateAscent()
    print('Solution')
    print(ca.coordinateAscent(y, X, []))
    print('----------')

    sigma = np.sqrt(0.1)
    noise = sigma * np.random.random((X.shape[0], 1))
    print('lx = ')
    print(X.shape[0])
    y = y + noise
    print(ca.coordinateAscent(y, X, []))


if __name__ == '__main__':
    main()
